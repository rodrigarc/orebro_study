for (i in enrichment_list_up) {
if(is.null(i) == TRUE)
print("item is null")
enrichment_list_up[[is.null(i) == TRUE]] <- NULL
print("item is null and was removed")
}
enrichment_list_up[[is.null(3)]]
for (i in enrichment_list_up) {
if(is.null(i) == TRUE)
is.null(enrichment_list_up[[i]]) == TRUE <- NULL
print("item is null and was removed")
}
View(enrichment_list_up)
View(enrichment_list_up)
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
View(enrichment_list_up)
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[[i]]) == TRUE <- NULL)
print("item is null and was removed")
}
for (i in enrichment_list_up) {
if(is.null(i) == TRUE <- NULL)
print("item is null and was removed")
}
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[[i]]) == TRUE)
print("item is null and was removed")
}
if(is.null(enrichment_list_up[[3]]) == TRUE){
enrichment_list_up[[3]] <- NULL
print("Element was removed")
} else{
print("Element was not removed")
}
if(is.null(enrichment_list_up[[3]]) == TRUE){
enrichment_list_up[[3]] <- NULL
print("Element was removed")
} else{
print("Element was not removed")
}
for (i in enrichment_list_up) {
print(i)
}
names(enrichment_list_up)
for (i in enrichment_list_up) {
print(names(i))
}
??list
??list()
help(list())
list()?
?list
list()??
??list()
??function
help(function)
help('function')
for (i in enrichment_list_up[[]]){
print(names(enrichment_list_up))
}
names(enrichment_list_up)
for (i in enrichment_list_up[[]]){
print(names(enrichment_list_up))
}
enrichment_list_up[]
enrichment_list_up[[]]
enrichment_list_up[[1]]
enrichment_list_up[[3]]
for (i in 1:length(enrichment_list_up[1])){
print(names(i))
}
names(enrichment_list_up[1])
1:length(enrichment_list_up[1])
1:length(enrichment_list_up[[1]])
enrichment_list_up[1]
summary(enrichment_list_up[[1]])
summary(enrichment_list_up[1])
for (i in enrichment_list_up[]){
print(names(i))
}
for (i in enrichment_list_up[[]]){
print(names(i))
}
for (i in enrichment_list_up[){
for (i in enrichment_list_up[]){
print(names(i))
}
names(enrichment_list_up[1])
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[3]) == TRUE)
print("item is null and was removed")
}
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[[3]]) == TRUE)
print("item is null and was removed")
}
if(is.null(enrichment_list_up[3]) == TRUE){
enrichment_list_up[3] <- NULL
print("Element was removed")
} else{
print("Element was not removed")
}
enrichment_list_up[3]
View(enrichment_list_up)
is.null(enrichment_list_up[3])
enrichment_list_up[3]
enrichment_list_up[3] == TRUE
if(enrichment_list_up[3] == NULL){
print("Element is null")
}
if(is.null(enrichment_list_up[3])){
print("Element is null")
}
if(is.null(enrichment_list_up[3]) == TRUE) {
print("Element is null")
}
if(is.null(enrichment_list_up[[3]]) == TRUE) {
print("Element is null")
}
if(is.null(enrichment_list_up[[3]])) {
print("Element is null")
}
names(enrichment_list_up[[3]])
names(enrichment_list_up[3])
if(is.null(enrichment_list_up[3])) {
print("Element is null")
}
enrichment_list_up[["NaÃ¯ve Dose 1"]]
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[[]]) == TRUE)
print("item is null and was removed")
}
if(is.null(enrichment_list_up[[3]]) == TRUE){
enrichment_list_up[[3]] <- NULL
print("Element was removed")
} else{
print("Element was not removed")
}
View(enrichment_list_up)
for (i in enrichment_list_up[]){
print('hello world')
}
for (i in enrichment_list_up[[]]){
print('hello world')
}
for (i in enrichment_list_up){
print('hello world')
}
for (i in enrichment_list_up){
print(summary(i))
}
for (i in enrichment_list_up){
print(is.null(i))
}
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
for (i in enrichment_list_up){
print(is.null(i))
}
for (i in enrichment_list_up) {
if(is.null(i))
print('i is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up[c(is.null(i))] <- NULL
print('i is null')
}
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
for (i in enrichment_list_up){
print(is.null(i))
}
for (i in enrichment_list_up) {
if(is.null(i))
print('i is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
i <- NULL
print('i is null')
}
View(enrichment_list_up)
for (i in enrichment_list_up) {
if(is.null(i))
print('i is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
i = NULL
print('i is null')
}
if(is.null(i))
for (i in enrichment_list_up){
print(is.null(i))
}
for (i in enrichment_list_up){
print(is.null(i))
}
for (i in enrichment_list_up) {
if(is.null(i))
print('i is null')
}
if(is.null(enrichment_list_up[[3]]){
if(is.null(enrichment_list_up[[3]])){
enrichment_list_up[[3]] <- NULL
print("Element was removed")
} else{
print("Element was not removed")
}
View(enrichment_list_up)
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up[[i]] <- NULL
print('i is null')
}
for (i in enrichment_list_up[[]]){
print(is.null(i))
}
for (i in enrichment_list_up[]){
print(is.null(i))
}
for (i in enrichment_list_up[[]]) {
if(is.null(i))
print('i is null')
}
for (i in enrichment_list_up[]) {
if(is.null(i))
print('i is null')
}
for (i in enrichment_list_up[]) {
if(is.null(i))
i <- NULL
print('i is null')
}
for (i in enrichment_list_up){
print(is.null(i))
}
for (i in enrichment_list_up) {
if(is.null(i))
i <- NULL
print('i is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
print('i is null')
}
enrichment_list_up[- 3]
enrichment_list_up[-3]
enrichment_list_up[3]
enrichment_list_up[-3]
View(enrichment_list_up)
enrichment_list_up <- enrichment_list_up[- 3]
View(enrichment_list_up)
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up[- i]
print('i is null')
}
print('i is null')
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up <- enrichment_list_up[- i]
print('i is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up[i] <- NULL
}
View(enrichment_list_up)
for (i in enrichment_list_up) {
if(is.null(i))
enrichment_list_up[i] <- NULL
}
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[i]))
is.null(enrichment_list_up[i] <- NULL)
}
for (i in enrichment_list_up) {
if(is.null(enrichment_list_up[i]))
print('is null')
}
for (i in enrichment_list_up) {
if(is.null(i))
print('is null')
}
View(enrichment_list_up)
enrichment_list_up[lengths(enrichment_list_up) != 0]
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
View(enrichment_list_up)
class(enrichment_list_up)
enrichment_list_down[lapply(enrichment_list_down, is.null)] <- NULL
print(is.null(i))
#Pseudocode
## For every element in list, if element == NULL, remove from list
for (i in enrichment_list_down) {
print(is.null(i))
}
enrichment_list_down[sapply(enrichment_list_down, is.null)] <- NULL
View(enrichment_list_down)
#Enrichment analysis
listEnrichrDbs()
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
enrichment_list_down <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Down regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
gmt <- read.gmt("../data/blood_transcription_module/BTM_for_GSEA_20131008.gmt")
View(enrichment_list_down)
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
enrichment_list_down[sapply(enrichment_list_down, is.null)] <- NULL
# Function for removing NULL elements on list
remove_null <- function(list)
list[sapply(list, is.null)] <- NULL
View(remove_null)
remove_null(enrichment_list_up)
#Enrichment analysis
listEnrichrDbs()
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
enrichment_list_down <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Down regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
gmt <- read.gmt("../data/blood_transcription_module/BTM_for_GSEA_20131008.gmt")
remove_null(enrichment_list_up)
remove_null(enrichment_list_up)
View(enrichment_list_up)
# Removing elements without significant results from enrichment lists
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
remove_null(enrichment_list_down)
enrichment_list_down[sapply(enrichment_list_down, is.null)] <- NULL
remove_null <- function(y)
y[sapply(y, is.null)] <- NULL
View(remove_null)
#Enrichment analysis
listEnrichrDbs()
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
enrichment_list_down <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Down regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
gmt <- read.gmt("../data/blood_transcription_module/BTM_for_GSEA_20131008.gmt")
remove_null(enrichment_list_down)
enrichment_list_down <- remove_null(enrichment_list_down)
remove_null(enrichment_list_up)
View(enrichment_list_up)
# Removing elements without significant results from enrichment lists
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
View(enrichment_list_up)
remove_null <- function(list1)
list1[sapply(list1, is.null)] <- NULL
View(remove_null)
#Enrichment analysis
listEnrichrDbs()
enrichment_list_up <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Up regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
enrichment_list_down <- lapply(results_list_plot, function(x) {
enrichr(
genes = rownames(x[x$test_padj == "Down regulated", ]),
databases = c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021"))})
gmt <- read.gmt("../data/blood_transcription_module/BTM_for_GSEA_20131008.gmt")
remove_null <- function(list1)
list1[sapply(list1, is.null)] <- NULL
remove_null(enrichment_list_up)
View(enrichment_list)
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
enrichment_list_down[sapply(enrichment_list_down, is.null)] <- NULL
View(enrichment_list_down)
View(enrichment_list_down[["NaÃ¯ve Dose 2"]][["KEGG_2021_Human"]])
# Removing elements without significant results from enrichment lists
enrichment_list_up[sapply(enrichment_list_up, is.null)] <- NULL
enrichment_list_down[sapply(enrichment_list_down, is.null)] <- NULL
#Visualize significant terms
enrichment_list <- enrichment_list_up
plots_enrich <- list()
for(pathway in 1:length(enrichment_list_up[[1]])){
rbinded_enrich_list <- lapply(enrichment_list, function(x)x[[pathway]])
print(names(enrichment_list[[1]])[[pathway]])
rbinded_enrich_df <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
plots_enrich[[pathway]] <- rbinded_enrich_df %>%
group_by(.id) %>%
arrange(Adjusted.P.value) %>%
slice(1:10)
}
lapply(plots_enrich, function(x){
x %>%
ggplot(aes(x = Term, y = -log10(Adjusted.P.value))) +
geom_bar(stat = "identity", width = 0.05) + geom_point(size = 3) +
theme_minimal() +
theme(text = element_text(size = 10),
plot.title = element_text(hjust = (5 / nchar(results_list)) * 2),
plot.margin = margin(t = 5, r = 50, b = 5, unit = "pt"),
axis.text.y = element_text(size = 8)) +
coord_flip() +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "gray") +
theme_bw() +
labs(y = expression("Adjusted P value, -Log"[10]*"")) +
facet_wrap(~.id)
})
#Removing items without significant results from list
enrichment_list_up[c("Baseline Dose 1", "Baseline Dose 2", "Conv", "NaÃ¯ve", "Dose 1", "Dose 2")] <- NULL
enrichment_list_down[c("Conv", "Dose 2")] <- NULL
## Upregulated
### Pseudocode for doing this at the same time for up- and down regulated enrichment list using nested for loop
# plots_enrich <- list()
#   for(i in 1:length(enrichment_list_up[[1]])){
#
#       rbinded_enrich_list <- lapply(enrichment_list_up, function(x)x[[i]])
#       print(names(enrichment_list_up[[1]])[[i]])
#       rbinded_enrich_df <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
#
#       plots_enrich[[i]] <- rbinded_enrich_df %>%
#       group_by(.id) %>%
#       arrange(Adjusted.P.value)%>%
#       slice(1:10)
#
#     for(j in 1:length(enrichment_list_down[[1]])){
#
#       rbinded_enrich_list_d <- lapply(enrichment_list_down, function(x)x[[j]])
#       print(names(enrichment_list_down[[1]])[[j]])
#       rbinded_enrich_df_d <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
#
#       plots_enrich[[j]] <- rbinded_enrich_df_d %>%
#       group_by(.id) %>%
#       arrange(Adjusted.P.value)%>%
#       slice(1:10)
#     }
#   }
plots_enrich < - list()
#Removing items without significant results from list
enrichment_list_up[c("Baseline Dose 1", "Baseline Dose 2", "Conv", "NaÃ¯ve", "Dose 1", "Dose 2")] <- NULL
enrichment_list_down[c("Conv", "Dose 2")] <- NULL
## Upregulated
### Pseudocode for doing this at the same time for up- and down regulated enrichment list using nested for loop
# plots_enrich <- list()
#   for(i in 1:length(enrichment_list_up[[1]])){
#
#       rbinded_enrich_list <- lapply(enrichment_list_up, function(x)x[[i]])
#       print(names(enrichment_list_up[[1]])[[i]])
#       rbinded_enrich_df <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
#
#       plots_enrich[[i]] <- rbinded_enrich_df %>%
#       group_by(.id) %>%
#       arrange(Adjusted.P.value)%>%
#       slice(1:10)
#
#     for(j in 1:length(enrichment_list_down[[1]])){
#
#       rbinded_enrich_list_d <- lapply(enrichment_list_down, function(x)x[[j]])
#       print(names(enrichment_list_down[[1]])[[j]])
#       rbinded_enrich_df_d <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
#
#       plots_enrich[[j]] <- rbinded_enrich_df_d %>%
#       group_by(.id) %>%
#       arrange(Adjusted.P.value)%>%
#       slice(1:10)
#     }
#   }
plots_enrich < - list()
plots_enrich <- list()
for(pathway in 1:length(enrichment_list_down[[1]])){
rbinded_enrich_list <- lapply(enrichment_list_down, function(x)x[[pathway]])
print(names(enrichment_list_down[[1]])[[pathway]])
rbinded_enrich_df <- data.table::rbindlist(l = rbinded_enrich_list, idcol = TRUE, fill = TRUE)
plots_enrich[[pathway]] <- rbinded_enrich_df %>%
group_by(.id) %>%
arrange(Adjusted.P.value)%>%
slice(1:10)
}
names(plots_enrich) <- c("GO_Biological_Process_2021", "KEGG_2021_Human","GO_Molecular_Function_2021")
# library(forcats), reorder GO terms after adjusted p value
down_plots <- lapply(plots_enrich, function(x){
x %>%
mutate(Term = fct_reorder(Term, -log10(Adjusted.P.value))) %>%
ggplot(aes(x = Term, y = -log10(Adjusted.P.value))) +
geom_bar(stat = "identity", fill = "dark blue", width = .5) +
theme_minimal() +
theme(text = element_text(size = 10),
plot.title = element_text(hjust = (5 / nchar(results_list)) * 2),
plot.margin = margin(t = 5, r = 50, b = 5, unit = "pt"),
axis.text.y = element_text(size = 8)) +
coord_flip() +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "gray") +
theme_bw() +
labs(x = NULL, y = expression("Adjusted P value, -Log"[10]*"")) +
facet_wrap(~.id)
})
names(down_plots) <- names(plots_enrich)
down_plots
